{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Janos Liebe",
    "Parameters": {
        "VPCCIDR": {
            "Description": "CIDR Block for the VPC.",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "SubnetCIDR": {
            "Description": "CIDR Block for the public subnet.",
            "Type": "String",
            "Default": "10.0.2.0/24",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "KeyPairName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Name of an existing EC2 KeyPair.",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[-_ .a-zA-Z0-9]*",
            "ConstraintDescription": "Can contain only alphanumeric characters, spaces, dashes, dots and underscores."
        },
        "ServerInstanceType": {
            "Description": "Amazon EC2 instance type for the instances.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium"
            ]
        },
        "InstanceAMI": {
            "Description": "Image for the instances.",
            "Type": "String",
            "Default": "ami-47a23a30",
            "MinLength": "12",
            "MaxLength": "12",
            "AllowedPattern": "[a-z0-9-]*",
            "ConstraintDescription": "Can contain only alphanumeric lowercase characters, dashes and numbers."
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags": [{"Key": "Name", "Value": "StackVPC"}]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [{"Key": "Name", "Value": "StackGW"}]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "Subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "SubnetCIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [{"Key": "Name", "Value": "StackSubnet"}]
            }
        },
        "DHCPOptions": {
           "Type": "AWS::EC2::DHCPOptions",
           "Properties": {
                "DomainName": "eu-west-1.compute.internal",
                "DomainNameServers": ["AmazonProvidedDNS"],
                "Tags": [{"Key": "Name", "Value": "StackDHCPOptions"}]
           }
        },
        "DHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "DhcpOptionsId": {
                    "Ref": "DHCPOptions"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "RouteTable": {
           "Type" : "AWS::EC2::RouteTable",
           "Properties" : {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{"Key": "Name", "Value": "StackRouteTable"}]
           }
        },
        "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId" : {
                    "Ref": "RouteTable"
                },
                "SubnetId" : {
                    "Ref": "Subnet"
                }
           }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "NetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{"Key": "Name", "Value": "StackNetworkACL"}]
            }
        },
        "NetworkAclEgressEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "NetworkAclIngressEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "SecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allows ssh and tcp to 8080 or 7272 from anywhere and all traffic within the VPC",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "7272",
                        "ToPort": "7272",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5000",
                        "ToPort": "5000",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "SubnetCIDR"
                        }
                    }

                ],
                "Tags" : [{"Key": "Name", "Value": "StackSecurityGroup"}]
            }
        },
        "ServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {}
                    }
                }
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref" : "SecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref" : "Subnet"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "ImageId": {
                    "Ref": "InstanceAMI"
                },
                "Tags" : [{"Key": "Name", "Value": "StackServerInstance"}],
                "InstanceType": {
                    "Ref": "ServerInstanceType"
                }
            },
            "DependsOn": "AttachGateway"
        }
    }
}
